{
	"id": "e0e033f9-dd0d-41a3-b325-df77434b2d89",
	"name": "Bookshelf API Test",
	"timestamp": "2023-03-14T10:57:50.988Z",
	"collection_id": "0-36467dd8-6fc6-4b52-9c9d-82d0dd7347c7",
	"folder_id": 0,
	"environment_id": "d64477a9-b6b6-443e-a628-7f2d025baf21",
	"totalPass": 104,
	"totalFail": 0,
	"results": [
		{
			"id": "93d6d378-7e62-483d-8a4a-8216e0659a07",
			"name": "[Mandatory] Add Book With Complete Data",
			"url": "http://localhost:5000/books",
			"time": 8,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "ecccb172-0cec-4082-98fe-6c4be8342291",
			"name": "[Mandatory] Add Book With Finished Reading",
			"url": "http://localhost:5000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "3197fb4a-7028-4f61-877a-5d192e9cd5d2",
			"name": "[Mandatory] Add Book Without Name",
			"url": "http://localhost:5000/books",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "ae02cd5f-64ab-427d-a7e7-e694c46f9e81",
			"name": "[Mandatory] Add Book with Page Read More Than Page Count",
			"url": "http://localhost:5000/books",
			"time": 2,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "cc68e1cf-f21d-406c-a451-608603614de7",
			"name": "[Mandatory] Get All Books",
			"url": "http://localhost:5000/books",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains two items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains two items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains two items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "d63c305e-3587-443c-b93e-29a1bd05f86f",
			"name": "[Mandatory] Get Detail Books With Correct Id",
			"url": "http://localhost:5000/books/kfkQsm-w5qOcjnh4",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "cd65f17e-36ce-471b-8a4e-106153813946",
			"name": "[Mandatory] Get Detail Finished Book",
			"url": "http://localhost:5000/books/Fzm4_Id9UkDdaZp-",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "1310ffb2-d52b-4a7d-8262-474add1a009e",
			"name": "[Mandatory] Get Detail Books With Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 2,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"response code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true
				}
			]
		},
		{
			"id": "82def583-d5f0-4e6f-89aa-0f1f4a43062a",
			"name": "[Mandatory] Update Book With Complete Data",
			"url": "http://localhost:5000/books/kfkQsm-w5qOcjnh4",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"book object should contain updated values": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"book object should contain updated values": true
				}
			]
		},
		{
			"id": "d7bd0c62-6b85-4b0d-b677-e4c0f8d1f84c",
			"name": "[Mandatory] Update Book Without Name",
			"url": "http://localhost:5000/books/kfkQsm-w5qOcjnh4",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "3c2081fb-9ce9-4519-b8c9-5272a5b98531",
			"name": "[Mandatory] Update Book With Page Read More Than Page Count",
			"url": "http://localhost:5000/books/kfkQsm-w5qOcjnh4",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "a4f8d281-eb94-409f-8c15-260328b592e3",
			"name": "[Mandatory] Update Book with Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "51710f13-00de-4458-b100-928bcc0868be",
			"name": "[Mandatory] Delete Book with Correct Id",
			"url": "http://localhost:5000/books/kfkQsm-w5qOcjnh4",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "93aecfa2-2621-40d8-93e7-3b24ad7697da",
			"name": "[Mandatory] Delete Finished book",
			"url": "http://localhost:5000/books/Fzm4_Id9UkDdaZp-",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "a14901eb-900e-4186-ae3a-01cecf1cf5e6",
			"name": "[Mandatory] Delete Book with Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 2,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "ae77cf68-b643-4ad8-9494-1f7c6c58c547",
			"name": "Add Reading and Finished Book",
			"url": "http://localhost:5000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "72db37ef-2209-4f19-963b-70c4875b76b2",
			"name": "Add Reading and Unfinished Book with \"Dicoding\" Name",
			"url": "http://localhost:5000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "5591e7d2-f1e9-482e-92c5-60bd9cbc8822",
			"name": "Add Unreading Books and Unfinished Book \"Dicoding\" Name",
			"url": "http://localhost:5000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "ec77e41c-4905-498b-8478-b6155ff1d06c",
			"name": "Add Unreading Books and Unfinished Book",
			"url": "http://localhost:5000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "57818e0f-524a-47a9-af82-f8cc8fb4142b",
			"name": "[Optional] Get All Reading Books",
			"url": "http://localhost:5000/books?reading=1",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "1babe35f-0fac-480d-b940-73dd48d31eee",
			"name": "[Optional] Get All Unreading Books",
			"url": "http://localhost:5000/books?reading=0",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains at 2 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains at 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains at 2 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "f362206c-b8de-4f59-9ef2-a1916b5d8d3c",
			"name": "[Optional] Get All Finished Books",
			"url": "http://localhost:5000/books?finished=1",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 1 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 1 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 1 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "8f5e0001-b6ae-4b47-be8f-823ce0b162fc",
			"name": "[Optional] Get All Unfinished Books",
			"url": "http://localhost:5000/books?finished=0",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 3 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 3 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 3 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "b6063685-dfe7-41dd-9816-7dfc578e18f4",
			"name": "[Optional] Get All Books Contains \"Dicoding\" Name",
			"url": "http://localhost:5000/books?name=Dicoding",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 68,
	"collection": {
		"requests": [
			{
				"id": "93d6d378-7e62-483d-8a4a-8216e0659a07",
				"method": "POST"
			},
			{
				"id": "ecccb172-0cec-4082-98fe-6c4be8342291",
				"method": "POST"
			},
			{
				"id": "3197fb4a-7028-4f61-877a-5d192e9cd5d2",
				"method": "POST"
			},
			{
				"id": "ae02cd5f-64ab-427d-a7e7-e694c46f9e81",
				"method": "POST"
			},
			{
				"id": "cc68e1cf-f21d-406c-a451-608603614de7",
				"method": "GET"
			},
			{
				"id": "d63c305e-3587-443c-b93e-29a1bd05f86f",
				"method": "GET"
			},
			{
				"id": "cd65f17e-36ce-471b-8a4e-106153813946",
				"method": "GET"
			},
			{
				"id": "1310ffb2-d52b-4a7d-8262-474add1a009e",
				"method": "GET"
			},
			{
				"id": "82def583-d5f0-4e6f-89aa-0f1f4a43062a",
				"method": "PUT"
			},
			{
				"id": "d7bd0c62-6b85-4b0d-b677-e4c0f8d1f84c",
				"method": "PUT"
			},
			{
				"id": "3c2081fb-9ce9-4519-b8c9-5272a5b98531",
				"method": "PUT"
			},
			{
				"id": "a4f8d281-eb94-409f-8c15-260328b592e3",
				"method": "PUT"
			},
			{
				"id": "51710f13-00de-4458-b100-928bcc0868be",
				"method": "DELETE"
			},
			{
				"id": "93aecfa2-2621-40d8-93e7-3b24ad7697da",
				"method": "DELETE"
			},
			{
				"id": "a14901eb-900e-4186-ae3a-01cecf1cf5e6",
				"method": "DELETE"
			},
			{
				"id": "ae77cf68-b643-4ad8-9494-1f7c6c58c547",
				"method": "POST"
			},
			{
				"id": "72db37ef-2209-4f19-963b-70c4875b76b2",
				"method": "POST"
			},
			{
				"id": "5591e7d2-f1e9-482e-92c5-60bd9cbc8822",
				"method": "POST"
			},
			{
				"id": "ec77e41c-4905-498b-8478-b6155ff1d06c",
				"method": "POST"
			},
			{
				"id": "57818e0f-524a-47a9-af82-f8cc8fb4142b",
				"method": "GET"
			},
			{
				"id": "1babe35f-0fac-480d-b940-73dd48d31eee",
				"method": "GET"
			},
			{
				"id": "f362206c-b8de-4f59-9ef2-a1916b5d8d3c",
				"method": "GET"
			},
			{
				"id": "8f5e0001-b6ae-4b47-be8f-823ce0b162fc",
				"method": "GET"
			},
			{
				"id": "b6063685-dfe7-41dd-9816-7dfc578e18f4",
				"method": "GET"
			}
		]
	}
}